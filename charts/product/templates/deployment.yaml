apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.Values.serviceName}}-deployment"
  labels:
    app: {{.Values.serviceName }}
    project: {{.Values.projectName }}
    app.kubernetes.io/part-of:  {{.Values.projectName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
      project:  {{ .Values.projectName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }}
        project:  {{ .Values.projectName }}
      annotations:
        linkerd.io/inject: enabled
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - image: {{ .Values.image }}
          name: {{.Values.serviceName}}
          imagePullPolicy: {{default "Never" .Values.imagePullPolicy}}
          env:
            - name: MONGO_SERVER
              valueFrom:
                secretKeyRef:
                  name: db-env
                  key: MONGO_SERVER
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: db-env
                  key: MONGO_DB
            - name: MONGO_COLLECTION_PRODUCTS
              valueFrom:
                configMapKeyRef:
                  name: global-env
                  key: MONGO_COLLECTION_PRODUCTS
            - name: MONGO_COLLECTION_FILES
              valueFrom:
                configMapKeyRef:
                  name: global-env
                  key: MONGO_COLLECTION_FILES
            - name: MONGO_COLLECTION_ACTIVITIES
              valueFrom:
                configMapKeyRef:
                  name: global-env
                  key: MONGO_COLLECTION_ACTIVITIES
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: global-env
                  key: PORT
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
          ports:
            - name: "{{.Values.serviceName}}-port"
              containerPort: 8080
      restartPolicy: {{ default "Always" .Values.restartPolicy}}